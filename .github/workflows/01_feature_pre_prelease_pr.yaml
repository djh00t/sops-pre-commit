---
name: 01 Auto PR ðŸ¤–

on:
  push:
    branches-ignore:
      - main
      - master
      - release
      - pre-release
  workflow_dispatch:

jobs:
  create-feature-pr:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4.1.7
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v5.1.0
        with:
          python-version: "3.x"

      - name: Load Python cache
        uses: actions/cache@v4.0.2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-cache-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-cache-${{ hashFiles('**/requirements.txt') }}
            ${{ runner.os }}-pip-cache-

      - name: Set up environment variables
        run: |
          # Setup GITHUB_TOKEN
          echo "GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}" >> $GITHUB_ENV
          # Setup GH_TOKEN
          echo "GH_TOKEN=${{ secrets.GITHUB_TOKEN }}" >> $GITHUB_ENV
          # Setup OpenAI API Key
          echo "OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}" >> $GITHUB_ENV
          # Get Current PR Title
          PR_TITLE=$(gh pr list --json title --jq '.[0].title' || echo "")
          # Sanitize PR_TITLE to remove problematic characters
          SANITIZED_PR_TITLE=$(echo "$PR_TITLE" | tr -d '\n' | tr -d '\r' | tr -d '"')
          echo "PR_TITLE=$SANITIZED_PR_TITLE" >> $GITHUB_ENV
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_TITLE: ${{ env.PR_TITLE }}

      - name: Configure Git & Login to GitHub CLI
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"

      - name: Install Python Requirements
        run: make install

      - name: Run Unit Tests
        run: make test

      - name: Create or Update PR
        id: pr
        run: |
          SOURCE_BRANCH=$(git rev-parse --abbrev-ref HEAD)
          PR_URL=$(gh pr list --head $SOURCE_BRANCH --json url --jq '.[0].url' || echo "")
          PR_TITLE=$(pr-title-generate)
          echo "PR_TITLE: $PR_TITLE"
          if [ "$SOURCE_BRANCH" = "release" ]; then
            BASE_BRANCH="main"
          else
            BASE_BRANCH="pre-release"
          fi
          if [ -z "$PR_URL" ]; then
            PR_URL=$(gh pr create \
              --title "$PR_TITLE" \
              --body "This PR was automatically generated by a GitHub Action" \
              --base $BASE_BRANCH)
            echo "PR_URL: $PR_URL"
          fi
          PR_BODY=$(python3 .github/workflows/pr_body_gen.py \
            $SOURCE_BRANCH $BASE_BRANCH)
          gh pr edit $PR_URL --title "$PR_TITLE" --body "$PR_BODY"
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_TITLE: ${{ env.PR_TITLE }}
        shell: /usr/bin/bash -e {0}
