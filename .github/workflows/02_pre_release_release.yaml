---
name: 02 Pre Release PR ðŸ¥³

on:
  push:
    branches:
      - pre-release
  workflow_dispatch: {}

jobs:
  create-pre-release-pr:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.1.7
        with:
          fetch-depth: 0

      - name: Set up environment variables & git config
        run: |
          .github/workflows/tasks-setup-variables.sh
          .github/workflows/tasks-setup-git.sh

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22.4.1"

      - name: Load Node.js cache
        uses: actions/cache@v4.0.2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-cache
          restore-keys: |
            ${{ runner.os }}-node-cache-

      - name: Install Node.js dependencies
        run: |
          npm install

      - name: Setup Python
        uses: actions/setup-python@v5.1.0
        with:
          python-version: "3.x"

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -

      - name: Load Poetry cache
        uses: actions/cache@v4.0.2
        with:
          path: |
            ~/.cache/pypoetry
            ~/.cache/pip
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-

      - name: Install Python Requirements
        run: poetry install

      - name: Run Unit Tests
        run: poetry run pytest

      - name: Run semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: ./.github/workflows/semantic-release.sh pre-release

      - name: Commit changes
        run: |
          git add .
          git commit -m "chore(pre-release): ${{ env.RELEASE_VERSION }} [skip ci]" || echo "No changes to commit"
          git push origin pre-release

      # Check if PR exists, if it doesn't create one with a generated title using
      # pr-title-generate
      - name: Create or Update PR
        id: pr
        run: |
          SOURCE_BRANCH=$(poetry run git rev-parse --abbrev-ref HEAD)
          PR_URL=$(poetry run gh pr list --head $SOURCE_BRANCH --json url --jq '.[0].url' || echo "")
          PR_TITLE=$(poetry run pr-title-generate)
          echo "PR_TITLE: $PR_TITLE"
          BASE_BRANCH="release"
          if [ -z "$PR_URL" ]; then
            PR_URL=$(poetry run gh pr create --title "Pre-release $SOURCE_BRANCH" --body "This PR was automatically generated by a GitHub Action" --base $BASE_BRANCH --head $SOURCE_BRANCH)
            echo "PR_URL: $PR_URL"
          fi
          PR_BODY=$(poetry run python3 .github/workflows/pr_body_gen.py $SOURCE_BRANCH $BASE_BRANCH)
          poetry run gh pr edit $PR_URL --title "$PR_TITLE" --body "$PR_BODY"
        shell: /usr/bin/bash -e {0}
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_TITLE: ${{ env.PR_TITLE }}
