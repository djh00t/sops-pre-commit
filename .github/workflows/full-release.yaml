name: ðŸš€ Full Release

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch: {}

jobs:
  full-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.1.7
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22.4.1"

      - name: Load Node.js cache
        uses: actions/cache@v4.0.2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-cache
          restore-keys: |
            ${{ runner.os }}-node-cache-

      - name: Install Node.js dependencies
        run: |
          npm install
          npm ci
          npm update @semantic-release/github \
          @octokit/request \
          @semantic-release/commit-analyzer \
          @semantic-release/release-notes-generator \
          @semantic-release/changelog \
          @semantic-release/git \
          @semantic-release/github \
          @semantic-release/exec

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Load Python cache
        uses: actions/cache@v4.0.2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-cache-${{ hashFiles('**/requirements.in') }}
          restore-keys: |
            ${{ runner.os }}-pip-cache-${{ hashFiles('**/requirements.in') }}
            ${{ runner.os }}-pip-cache-

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel twine packaging build toml

      - name: Authenticate GitHub CLI
        run: echo "${{ secrets.GITHUB_TOKEN }}" | gh auth login --with-token

      - name: Configure Git & Login to GitHub CLI
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"

      - name: Run semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PYPI_USER_AGENT: ${{ secrets.PYPI_USER_AGENT }}
        run: npx semantic-release

  create-pull-request:
    name: Create Pull Request
    runs-on: ubuntu-latest
    needs: full-release

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Create Pull Request
        id: create_pull_request
        uses: peter-evans/create-pull-request@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: release-branch
          base: main
          title: 'Release PR'
          body: 'This PR contains the changes for the next release.'
          draft: false
          auto-merge: true

      - name: Merge Pull Request
        uses: actions/github-script@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const pull_number = parseInt("${{ steps.create_pull_request.outputs.pull_request_number }}", 10);
            await github.pulls.merge({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: pull_number,
              merge_method: 'squash'
            });

      - name: Update GitHub Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          LATEST_TAG=$(git describe --tags `git rev-list --tags --max-count=1`)
          gh release edit $LATEST_TAG --prerelease=false
