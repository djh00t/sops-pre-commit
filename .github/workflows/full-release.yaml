---
name: ðŸš€ Full Release

on:
  push:
    branches:
      - main
  workflow_dispatch: {}

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.1.7
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22.4.1"

      - name: Load Node.js cache
        uses: actions/cache@v4.0.2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-cache
          restore-keys: |
            ${{ runner.os }}-node-cache-

      - name: Install Node.js dependencies
        run: |
          npm install
          npm update @semantic-release/github \
          @octokit/request \
          @semantic-release/commit-analyzer \
          @semantic-release/release-notes-generator \
          @semantic-release/changelog \
          @semantic-release/git \
          @semantic-release/github \
          @semantic-release/exec

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Load Python cache
        uses: actions/cache@v4.0.2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-cache-${{ hashFiles('**/requirements.in') }}
          restore-keys: |
            ${{ runner.os }}-pip-cache-${{ hashFiles('**/requirements.in') }}
            ${{ runner.os }}-pip-cache-

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel twine packaging build toml

      - name: Authenticate GitHub CLI
        run: echo "${{ secrets.GITHUB_TOKEN }}" | gh auth login --with-token

      - name: Configure Git & Login to GitHub CLI
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"

      - name: Run semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PYPI_USER_AGENT: ${{ secrets.PYPI_USER_AGENT }}
        run: ./.github/workflows/semantic-release.sh

      - name: Upload to PyPI
        env:
          TWINE_USERNAME: "__token__"
          TWINE_PASSWORD: ${{ secrets.PYPI_USER_AGENT }}
        run: |
          python -m build
          for i in {1..5}; do
            twine upload dist/* && break || {
              echo "Upload failed, retrying in 5 seconds..."
              sleep 5
            }
          done

      - name: Update GitHub Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          LATEST_TAG=$(git describe --tags `git rev-list --tags --max-count=1`)
          gh release edit $LATEST_TAG --prerelease=false
